{"name":"Pastebin4j","tagline":"Paste bin API Wrapper for Java","body":"# PasteBin4j\r\n[![Build Status](https://travis-ci.org/kennedyoliveira/pastebin4j.svg?branch=master)](https://travis-ci.org/kennedyoliveira/pastebin4j)\r\n![Latest Release](https://github-basic-badges.herokuapp.com/release/kennedyoliveira/pastebin4j.svg?text=latest--release)\r\n[![Maven Central](https://img.shields.io/maven-central/v/com.github.kennedyoliveira/pastebin4j.svg)](http://search.maven.org/#artifactdetails%7Ccom.github.kennedyoliveira%7Cpastebin4j%7C1.0.0%7Cjar)\r\n![License](https://github-basic-badges.herokuapp.com/license/kennedyoliveira/pastebin4j.svg)\r\n[![PayPayl donate button](http://img.shields.io/paypal/donate.png?color=yellow)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=CR4K3FDKKK5FA&lc=BR&item_name=Kennedy%20Oliveira&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted \"Donate with paypal if you feels like helping me out :D\")\r\n\r\n### Paste bin API Implementation for Java\r\n\r\nSuper simples and efficient library implementing all the options provided by the PasteBin api.\r\n\r\nWith this library you can easily:\r\n\r\n- Create pastes for users and as a Guest\r\n- Delete pastes\r\n- List users pastes\r\n- Fetch user information\r\n- Create User Session Key (Actually you doesn't need to do that, the library will handle it, but if you want you can create too)\r\n- Get pastes contents (Currently just **PUBLIC** or **UNLISTED** pastes, **PRIVATE** pastes are not supported)\r\n\r\n## Table of Contents\r\n\r\n- [Installation](#installation)\r\n  - [Maven](#maven)\r\n  - [Local installation](#local-installation)\r\n- [Requirements](#requirements)\r\n- [Examples](#examples)\r\n  - [Core class](#core-class)\r\n  - [Listing your pastes:](#listing-your-pastes)\r\n  - [Creating a new Paste](#creating-a-new-paste)\r\n  - [More examples](#more-examples)\r\n- [Running tests](#running-tests)\r\n- [Contribution](#contribution)\r\n- [Problems & Suggestions](#problems--suggestions)\r\n- [License](#license)\r\n- [Donations](#donations)\r\n\r\n## Installation\r\n\r\n### Maven\r\n\r\nYou can add the following dependency to your maven or gradle based project:\r\n\r\n```xml\r\n<properties>\r\n    <pastebin4j.version>1.0.0<pastebin4j.version>\r\n<properties>\r\n\r\n<dependency>\r\n    <groupId>com.github.kennedyoliveira</groupId>\r\n    <artifactId>pastebin4j</artifactId>\r\n    <version>${pastebin4j.version}</version>\r\n</dependency>\r\n```\r\n\r\nYou can get the last version looking at the top in the \"maven-central\" badge and replace in your `pom.xml` or `build.gradle`\r\n\r\n### Local installation\r\n\r\nYou can build the project with gradle using the following command to install to you local repository:\r\n\r\n```\r\ngit clone https://github.com/kennedyoliveira/pastebin4j.git\r\ncd pastebin4j\r\n./gradlew clean build install -x test\r\n```\r\n\r\nExclude the tests because for testing you need to provide a `devkey`, `username` and `password`.\r\n\r\nThis command will build and install the project into your local maven repository and the artifacts generated will be in the `build/libs` directory inside your project folder.\r\n\r\n## Requirements\r\n\r\nTo use the APi you'll need to have a developer key, that you can get from the PasteBin site, you go to this link: [Developer Key](http://pastebin.com/api#1).\r\n\r\n## Examples\r\n\r\n### Core class\r\nAll the interaction is provided by the `PasteBin` class, you need to create one passing your credentials and that is it!\r\n\r\n### Listing your pastes:\r\n\r\n```java\r\n// Configuration for the Credentials\r\nfinal String devKey = \"dev-key\";\r\nfinal String userName = \"user-name\";\r\nfinal String password = \"password\";\r\n\r\n// Create a PasteBin object with the credentials\r\nfinal PasteBin pasteBin = new PasteBin(new AccountCredentials(devKey, userName, password));\r\n\r\n// List all the pastes from the user!\r\n// Pretty easy, isn't?\r\nfinal List<Paste> pastes = pasteBin.listUserPastes();\r\n\r\n// The method never returns null, so you can check if the list is empty to see if you have pastes or not\r\nif (pastes.isEmpty()) {\r\n    System.out.println(\"You don't have any pastes :(\");\r\n    return;\r\n}\r\n\r\n// Getting a paste\r\nfinal Paste paste = pastes.get(0);\r\n\r\n// Current info on pastes\r\nSystem.out.println(\"Title: \" + paste.getTitle());\r\nSystem.out.println(\"Visibility: \" + paste.getVisibility().name());\r\nSystem.out.println(\"Unique Key: \" + paste.getKey());\r\nSystem.out.println(\"Syntax Highlight: \" + paste.getHighLight().name());\r\nSystem.out.println(\"Paste Date: \" + paste.getLocalPasteDate());\r\nSystem.out.println(\"Paste Expiration: \" + paste.getExpiration());\r\nSystem.out.println(\"Paste Expiration Date: \" + paste.getLocalExpirationDate());\r\nSystem.out.println(\"Hits: \" + paste.getHits());\r\nSystem.out.println(\"URL:  \" + paste.getUrl());\r\nSystem.out.println(\"Size: \" + paste.getSize());\r\n\r\n// Prints all information of all pastes\r\npastes.forEach(System.out::println);\r\n```\r\n\r\n### Creating a new Paste\r\n\r\n```java\r\nfinal String devKey = \"dev-key\";\r\nfinal String userName = \"user-name\";\r\nfinal String password = \"password\";\r\n\r\nfinal PasteBin pasteBin = new PasteBin(new AccountCredentials(devKey, userName, password));\r\n\r\n//  Basic creation\r\nfinal Paste paste = new Paste();\r\n\r\npaste.setTitle(\"Testing API\");\r\npaste.setExpiration(PasteExpiration.ONE_HOUR);\r\npaste.setHighLight(PasteHighLight.Java);\r\npaste.setVisibility(PasteVisibility.UNLISTED);\r\npaste.setContent(\"public class Teste { }\");\r\n\r\nfinal String url = pasteBin.createPaste(paste);\r\n\r\nSystem.out.println(\"Paste created at url: \" + url);\r\n```\r\n\r\nThe api gives you enums with all the information so you can just select it easy, doesn't need to remember, the class `PasteHighLight` has all the SyntaxHighLight currently implemented in the PasteBin, the class `PasteExpiration` has all the possible values for Expiration in a Paste and the `PasteVisibility` has the visibility status of a paste.\r\n\r\nYou can create a guest Paste by using a `GuestPaste` instead of a paste.\r\n\r\n```java\r\nPaste p = new GuestPaste();\r\n```\r\n\r\nEven if you specify your `username` and `password` using this class your paste will be created as guest.\r\n\r\nThere are builder for creating the pastes that you can access by `Paste.newBuilder()`.\r\n\r\n### More examples\r\nCheck the `src/examples` for more examples, there you can see how to list trends pastes, get user information and more!\r\n\r\n## Running tests\r\nTo run the tests you need to specify an devkey, username and password.\r\n\r\nUse it in command line like the following:\r\n\r\n```\r\n.\\gradlew -Dpastebin4j.devkey=your-dev-key -Dpastebin4j.username=your-user-name -Dpastebin4j.password=your-password test\r\n```\r\n\r\n**Important Note:** The tests will create some pastes, so expect it :D\r\n\r\n## Contribution\r\nIf you want to contribute you can fork the project and send pull requests, you can even provide your own implementation of the API just by creating a class that implements the `PasteBinApi` interface and pass it to the `PasteBin` constructor.\r\n\r\n## Problems & Suggestions\r\nIf you encounter any problem, please report at [Issues](https://github.com/kennedyoliveira/pastebin4j/issues) i'm work on it the fast as i can.\r\n\r\n## License\r\nThis project is licensed with MIT License, so you can freely use, modify and distribute.\r\n\r\n## Donations\r\nIf this projects helped you and you feels like helping me back, consider a donation, it'll help me a lot!\r\nAnyway, if this helped you i'm glad i could help you!\r\n","google":"UA-66007738-2","note":"Don't delete this file! It's used internally to help with page regeneration."}